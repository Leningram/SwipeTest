{"version":3,"sources":["Todo/AddTodo.js","context.js","Todo/TodoItem.js","Todo/ItemList.js","App.js","reportWebVitals.js","index.js"],"names":["AddTodo","onCreate","useState","value","setValue","onSubmit","e","preventDefault","trim","placeholder","className","aria-label","onChange","event","target","type","Context","React","createContext","styles","input","marginRight","TodoItem","todo","index","toggleTodo","removeTodo","useContext","classes","completed","push","join","style","checked","id","title","onClick","bind","ItemsList","props","todos","map","onToggle","App","setTodos","Carousel","swipeOptions","continuous","TodoAdd","length","concat","Date","now","Provider","filter","aria-labelledby","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+KA+BeA,MA7Bf,YAAgC,IAAbC,EAAY,EAAZA,SACjB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAWA,OACE,uBAAMC,SAVR,SAAuBC,GACrBA,EAAEC,iBAEEJ,EAAMK,SACRP,EAASE,GACTC,EAAS,MAKX,UACE,uBACEK,YAAY,4EACZC,UAAU,YACVC,aAAW,kFACXR,MAAOA,EACPS,SAAU,SAACC,GAAD,OAAWT,EAASS,EAAMC,OAAOX,QAC3CY,KAAK,SAEP,wBAAQL,UAAU,gBAAgBK,KAAK,SAAvC,kECpBSC,EAFCC,IAAMC,gBCChBC,EAAS,CACbC,MAAO,CACLC,YAAa,SAiCFC,MA7Bf,YAAgD,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,WACvBC,EAAeC,qBAAWX,GAA1BU,WACFE,EAAU,GAMhB,OAJIL,EAAKM,WACPD,EAAQE,KAAK,QAIb,+BACE,uBAAMpB,UAAWkB,EAAQG,KAAK,KAA9B,UACE,uBACErB,UAAU,QACVsB,MAAOb,EAAOC,MACdL,KAAK,WACLkB,QAASV,EAAKM,UACdjB,SAAU,kBAAMa,EAAWF,EAAKW,OAElC,iCAASV,EAAQ,IARnB,OAUGD,EAAKY,SAER,wBAAQzB,UAAU,eAAe0B,QAASV,EAAWW,KAAK,KAAMd,EAAKW,IAArE,sBCXSI,MAjBf,SAAmBC,GACjB,OACE,6BACGA,EAAMC,MAAMC,KAAI,SAAClB,EAAMC,GACtB,OACE,cAAC,EAAD,CACED,KAAMA,EAENC,MAAOA,EACPC,WAAYc,EAAMG,UAFbnB,EAAKW,U,gBC0EPS,MA7Ef,WACE,MAA0BzC,mBAAS,CACjC,CAAEgC,GAAI,EAAGL,WAAW,EAAOM,MAAO,iEAClC,CAAED,GAAI,EAAGL,WAAW,EAAOM,MAAO,uEAClC,CAAED,GAAI,EAAGL,WAAW,EAAOM,MAAO,+EAHpC,mBAAOK,EAAP,KAAcI,EAAd,KAMMC,EAAW,WAEf,OACE,8BACE,eAAC,IAAD,CACEnC,UAAU,WACVoC,aAAc,CAAEC,YAAY,GAF9B,UAIE,sBAAKrC,UAAU,eAAf,UACG,IACD,oBAAIwB,GAAG,cAAP,iFACA,cAAC,EAAD,CAASjC,SAAU+C,IAClBR,EAAMS,OACL,cAAC,EAAD,CAAWT,MAAOA,EAAOE,SAAUjB,IAEnC,oHAGJ,4mBAgBR,SAASA,EAAWS,GAClBU,EACEJ,EAAMC,KAAI,SAAClB,GAIT,OAHIA,EAAKW,KAAOA,IACdX,EAAKM,WAAaN,EAAKM,WAElBN,MAKb,SAASyB,EAAQb,GACfS,EACEJ,EAAMU,OAAO,CACX,CACEf,QACAD,GAAIiB,KAAKC,MACTvB,WAAW,MAUnB,OACE,cAAC,EAAQwB,SAAT,CAAkBlD,MAAO,CAAEuB,WAL7B,SAAoBQ,GAClBU,EAASJ,EAAMc,QAAO,SAAC/B,GAAD,OAAUA,EAAKW,KAAOA,QAI5C,SACE,yBAASqB,kBAAgB,cAAc7C,UAAU,cAAjD,SACE,cAACmC,EAAD,SClEOW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.5d0d4356.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction AddTodo({ onCreate }) {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  function submitHandler(e) {\r\n    e.preventDefault();\r\n\r\n    if (value.trim()) {\r\n      onCreate(value);\r\n      setValue(\"\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <input\r\n        placeholder=\"Введите текст\"\r\n        className=\"textField\"\r\n        aria-label=\"Добавить текст\"\r\n        value={value}\r\n        onChange={(event) => setValue(event.target.value)}\r\n        type=\"text\"\r\n      />\r\n      <button className=\"addTodo point\" type=\"submit\">\r\n        Добавить\r\n      </button>\r\n    </form>\r\n  \r\n  )}\r\n\r\nexport default AddTodo;\r\n","import React from \"react\";\r\n\r\nconst Context = React.createContext();\r\n\r\nexport default Context;\r\n","import { useContext } from \"react\";\r\nimport Context from \"../context\";\r\n\r\nconst styles = {\r\n  input: {\r\n    marginRight: \"1rem\"\r\n  }\r\n};\r\n\r\nfunction TodoItem({ todo, index, toggleTodo }) {\r\n  const { removeTodo } = useContext(Context);\r\n  const classes = [];\r\n\r\n  if (todo.completed) {\r\n    classes.push(\"done\");\r\n  }\r\n\r\n  return (\r\n    <li>\r\n      <span className={classes.join(\" \")}>\r\n        <input\r\n          className=\"point\"\r\n          style={styles.input}\r\n          type=\"checkbox\"\r\n          checked={todo.completed}\r\n          onChange={() => toggleTodo(todo.id)}\r\n        />\r\n        <strong>{index + 1}</strong>\r\n        &nbsp;\r\n        {todo.title}\r\n      </span>\r\n      <button className=\"remove point\" onClick={removeTodo.bind(null, todo.id)}>\r\n        &times;\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default TodoItem;\r\n","// import { useState } from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nfunction ItemsList(props) {\r\n  return (\r\n    <ul>\r\n      {props.todos.map((todo, index) => {\r\n        return (\r\n          <TodoItem\r\n            todo={todo}\r\n            key={todo.id}\r\n            index={index}\r\n            toggleTodo={props.onToggle}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ItemsList;\r\n","import \"./index.css\";\nimport AddTodo from \"./Todo/AddTodo\";\nimport ItemsList from \"./Todo/ItemList\";\nimport { useState } from \"react\";\nimport Context from \"./context\";\nimport ReactSwipe from \"react-swipe\";\n\nfunction App() {\n  const [todos, setTodos] = useState([\n    { id: 1, completed: false, title: \"Купить Хлеб\" },\n    { id: 2, completed: false, title: \"Купить масло\" },\n    { id: 3, completed: false, title: \"Купить молоко\" },\n  ]);\n\n  const Carousel = () => {\n\n    return (\n      <div>\n        <ReactSwipe\n          className=\"carousel\"\n          swipeOptions={{ continuous: false }}\n        >\n          <div className=\"first-screen\">\n            {\" \"}\n            <h1 id=\"todos-label\">Первый экран</h1>\n            <AddTodo onCreate={TodoAdd} />\n            {todos.length ? (\n              <ItemsList todos={todos} onToggle={toggleTodo} />\n            ) : (\n              <p>Добавьте текст!</p>\n            )}\n          </div>\n          <div>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n            eiusmod tempor incididunt ut labore et dolore magna aliqua.\n            Vestibulum mattis ullamcorper velit sed ullamcorper. Ut sem viverra\n            aliquet eget. Faucibus turpis in eu mi bibendum neque egestas.\n            Laoreet sit amet cursus sit amet. Nunc vel risus commodo viverra\n            maecenas accumsan lacus vel. Viverra orci sagittis eu volutpat.\n            Pellentesque sit amet porttitor eget dolor morbi non arcu. Faucibus\n            interdum posuere lorem ipsum dolor sit amet consectetur. Vel quam\n            elementum pulvinar etiam non quam lacus suspendisse faucibus.\n          </div>\n        </ReactSwipe>\n      </div>\n    );\n  };\n\n  function toggleTodo(id) {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    );\n  }\n\n  function TodoAdd(title) {\n    setTodos(\n      todos.concat([\n        {\n          title,\n          id: Date.now(),\n          completed: false,\n        },\n      ])\n    );\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  }\n\n  return (\n    <Context.Provider value={{ removeTodo: removeTodo }}>\n      <section aria-labelledby=\"todos-label\" className=\"App wrapper\">\n        <Carousel />\n      </section>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}